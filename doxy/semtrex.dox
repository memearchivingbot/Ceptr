/**
   @page semtrex Semtrex explained
   @ingroup semtrex

   Semantic Tree Regular Expressions (Semtrex for short) provide a matching language for semantic trees that will feel familiar to anyone who has used regular expressions for matching on strings.
<br>
   A Semtrex is itself a semantic tree, but we have also created a linear textual representation of (and parser for) semtrex trees to make it easier to create them until we build better UI for processing trees in general.

<br>
\b Examples (with tree version and the parts of a sample tree that match in red)
<table><tr>
<td>\dotfile ex1.dot</td>
<td>\dotfile ex2.dot</td>
</tr>
</table>


   Here's a BNF for the textual representation of semtrex trees:

 @code
 <semtrex>        ::= <root> [ "/" <child>...]
 <root>           ::= "/" <element>
 <child>          ::= <element> | <optional> | <semtrex>
 <element>        ::= <walk> | <symbol_literal> | <value_literal> | <symbol_literal_set> | <value_literal_set> | <any> | <capture> | <siblings>
 <optional>       ::= <or> | <zero_or_more> | <one_or_more> | <zero_or_one>
 <walk>           ::= "%" <semtrex>
 <one_or_more>    ::= <semtrex> "+"
 <zero_or_more>   ::= <semtrex> "*"
 <zero_or_one>    ::= <semtrex> "?"
 <sequence>       ::= <semtrex> ["," <semtrex>]...
 <siblings>       ::= "(" <sequence> ")"
 <or>             ::= <semtrex> "|" <semtrex>
 <symbol_literal> ::= ["!"] <symbol>
 <symbol_literal_set> ::= ["!"] "{" <symbol> ["," <symbol>]... "}"
 <value>          ::= <string> | <char> | <int> | <float>
 <value_literal>  ::= <symbol> ["!"] "=" <value>
 <value_literal_set> ::= <symbol> ["!"] "={" <value> ["," <value> ]... "}"
 <any>            ::= "."
 <capture>        ::= "<" <symbol> ":" <semtrex> ">"
 <digit>          ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
 <letter>         ::= a | b ... | z | A | B ... | Z
 <special>        ::= "_"
 <symbol>         ::= (<letter> | <digit> | <special>)+
 <char>           ::= "'" <letter> | <digit> | <special> "'"
 <string>         ::= "\"" (<letter> | <digit> | <special>)+ "\""
 <int>            ::= <digit>+
 <float>          ::= <digit>+ ["." <digit>+ ]
 @endcode

*/
